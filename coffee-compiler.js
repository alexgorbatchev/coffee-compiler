// Generated by CoffeeScript 1.6.3
var coffee, compiler, fs, path;

fs = require('fs');

path = require('path');

coffee = require('coffee-script');

module.exports = compiler = {
  fromSource: function(src, filename, debug, callback) {
    var code, err, js, map, v3SourceMap, _ref;
    try {
      if (debug) {
        _ref = coffee.compile(src, {
          bare: true,
          sourceMap: true,
          filename: filename
        }), js = _ref.js, v3SourceMap = _ref.v3SourceMap;
        code = js;
        if (v3SourceMap) {
          map = JSON.parse(v3SourceMap);
          map.sources = [filename];
          map.sourcesContent = [src];
          code += '\n//@ sourceMappingURL=data:application/json;base64,';
          code += new Buffer(JSON.stringify(map)).toString('base64');
        }
      } else {
        code = coffee.compile(src, {
          bare: true,
          filename: filename
        });
      }
    } catch (_error) {
      err = _error;
      if (err.name === 'SyntaxError') {
        err.message = coffee.helpers.prettyErrorMessage(err, filename, src);
      }
    }
    return callback(err, code);
  },
  fromFile: function(filepath, debug, callback) {
    var _this = this;
    return fs.readFile(filepath, 'utf8', function(err, src) {
      if (err != null) {
        return callback(err);
      }
      return compiler.fromSource.apply(_this, [src, filepath, debug, callback]);
    });
  }
};
